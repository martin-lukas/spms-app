{"version":3,"sources":["Table.js","AddStockForm.js","Portfolio.js","AddPortfolioForm.js","utils.js","index.js"],"names":["Table","react_default","a","createElement","className","Table_TableHeader","Table_TableBody","data","this","props","removeStock","Component","TableHeader","TableBody","stocks","map","stock","index","totalVal","parseFloat","quantity","value","toFixed","key","symbol","onClick","i","length","push","AddStockForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","name","submitForm","state","isNaN","handleSubmit","initialState","type","onChange","API","Portfolio","filter","that","assertThisInitialized","url","concat","xhr","XMLHttpRequest","open","onload","e","readyState","status","tsObj","JSON","parse","responseText","dates","keys","toUpperCase","newData","exists","forEach","st","toConsumableArray","updateStockCookie","console","error","statusText","send","totalStockValue","sum","parseInt","submitted","_this2","removePortfolio","src_Table","src_AddStockForm","AddPortfolioForm","onSubmit","preventDefault","setCookie","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","App","portfolios","portfolio","portf","newPortfolios","newStockData","ports","stringify","objects","src_Portfolio","src_AddPortfolioForm","nameEQ","ca","split","c","charAt","substring","indexOf","getCookie","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.e1ef7aa9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './style.css';\r\n\r\nclass Table extends Component {\r\n    render() {\r\n        return (\r\n            <table className=\"main-table\">\r\n                <TableHeader />\r\n                <TableBody data={this.props.data} removeStock={this.props.removeStock} />\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Symbol</th>\r\n                <th>Value</th>\r\n                <th>Quantity</th>\r\n                <th>Total value</th>\r\n                <th>Remove</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\n\r\nconst TableBody = props => {\r\n    let stocks = props.data.map((stock, index) => {\r\n        let totalVal = (parseFloat(stock.quantity) * stock.value).toFixed(2);\r\n        return (\r\n            <tr key={index}>\r\n                <td>{stock.symbol}</td>\r\n                <td>{stock.value}</td>\r\n                <td>{stock.quantity}</td>\r\n                <td>{totalVal}</td>\r\n                <td>\r\n                    <button onClick={() => props.removeStock(index)}>X</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    });\r\n    for (let i = props.data.length; i < 5; i++) {\r\n        stocks.push((\r\n            <tr className=\"empty-row\" key={i}><td /><td /><td /><td /><td /></tr>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <tbody>\r\n                            {stocks}\r\n\r\n        </tbody>\r\n    );\r\n};\r\n\r\nexport default Table;","import React, {Component} from \"react\";\r\n\r\nclass AddStockForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            symbol: '',\r\n            value: parseFloat(\"0.00\"),\r\n            quantity: ''\r\n        };\r\n\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    };\r\n\r\n    submitForm = () => {\r\n        if (this.state.symbol !== '' && this.state.quantity !== '' && !isNaN(this.state.quantity)) {\r\n            this.props.handleSubmit(this.state);\r\n            this.setState(this.initialState);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"stock-form\">\r\n                <label>Symbol:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"symbol\"\r\n                    className=\"symbol-input-field\"\r\n                    value={this.state.symbol}\r\n                    onChange={this.handleChange} />\r\n                <label>Quantity:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"quantity\"\r\n                    className=\"quantity-input-field\"\r\n                    value={this.state.quantity}\r\n                    onChange={this.handleChange}/>\r\n                <input\r\n                    type=\"button\"\r\n                    value=\"Add\"\r\n                    onClick={this.submitForm} />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddStockForm;","import React, {Component} from \"react\";\r\nimport Table from \"./Table\";\r\nimport AddStockForm from \"./AddStockForm\";\r\n\r\nconst API = \"R2XFYH8AEAQTGTHE\";\r\n\r\nclass Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: props.data,\r\n            submitted: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    removeStock = index => {\r\n        this.setState({\r\n            data: this.state.data.filter((stock, i) => {\r\n                return i !== index;\r\n            })\r\n        });\r\n    };\r\n\r\n    handleSubmit = stock => {\r\n        let that = this;\r\n        let url = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${stock.symbol}&outputsize=compact&apikey=${API}`;\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", url, true);\r\n        xhr.onload = function (e) {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    let result = JSON.parse(xhr.responseText);\r\n                    const tsObj = result[\"Time Series (Daily)\"];\r\n                    if (typeof tsObj !== \"undefined\") {\r\n                        const dates = Object.keys(tsObj);\r\n                        stock.value = parseFloat(tsObj[dates[0]][\"4. close\"]).toFixed(2);\r\n                        stock.symbol = stock.symbol.toUpperCase();\r\n                        let newData = that.state.data;\r\n                        let exists = false;\r\n                        newData.forEach(function (st) {\r\n                            if (st.symbol === stock.symbol) {\r\n                                exists = true;\r\n                                st.value = stock.value;\r\n                                st.quantity = stock.quantity;\r\n                            }\r\n                        });\r\n                        if (!exists) {\r\n                            newData = [...that.state.data, stock];\r\n                        }\r\n                        if (newData.length <= 50) {\r\n                            that.setState({\r\n                                data: newData\r\n                            });\r\n                        }\r\n                        that.props.updateStockCookie(that.props.name, newData);\r\n                    }\r\n                } else {\r\n                    console.error(xhr.statusText);\r\n                }\r\n            }\r\n        };\r\n        xhr.send();\r\n    };\r\n\r\n    totalStockValue = () => {\r\n        let sum = 0;\r\n        let data = this.state.data;\r\n        for (let i = 0; i < data.length; i++) {\r\n            sum += parseFloat(data[i].value) * parseInt(data[i].quantity);\r\n        }\r\n        return sum.toFixed(2);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"portfolio-element\">\r\n                <div className=\"portfolio-header\">\r\n                    <p className=\"portfolio-name\">{this.props.name}</p>\r\n                    <button\r\n                        className=\"del-portfolio\"\r\n                        onClick={() => this.props.removePortfolio(this.props.name)}\r\n                    />\r\n                </div>\r\n                <Table\r\n                    data={this.state.data}\r\n                    removeStock={this.removeStock}\r\n                />\r\n                <p className=\"total-sum\">Total value of <b>{this.props.name}</b>: {this.totalStockValue()}</p>\r\n                <AddStockForm handleSubmit={this.handleSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Portfolio;","import React, {Component} from \"react\";\r\n\r\nclass AddPortfolioForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            name: '',\r\n            data: []\r\n        };\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    };\r\n\r\n    submitForm = () => {\r\n        if (!(this.state.name === '')) {\r\n            this.props.handleSubmit(this.state);\r\n            this.setState(this.initialState);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n                <form onSubmit={e => { e.preventDefault(); }}>\r\n                    <label>Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        className=\"name-input-field\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange} />\r\n                    <input\r\n                        type=\"button\"\r\n                        value=\"Add portfolio\"\r\n                        onClick={this.submitForm} />\r\n                </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddPortfolioForm;","export function setCookie(name,value,days) {\r\n    let expires = \"\";\r\n    // if (days) {\r\n    //     let date = new Date();\r\n    //     // date.setTime(date.getTime() + (days*24*60*60*1000));\r\n    //     expires = \"; expires=\" + date.toUTCString();\r\n    // }\r\n    // document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\r\n\r\n    let date = new Date();\r\n    date.setTime(date.getTime() + (10 * 365 * 24 * 60 * 60));\r\n    expires = \"; expires=\" + date.toUTCString();\r\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\r\n}\r\n\r\nexport function getCookie(name) {\r\n    let nameEQ = name + \"=\";\r\n    let ca = document.cookie.split(';');\r\n    for(let i=0;i < ca.length;i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0)===' ') c = c.substring(1,c.length);\r\n        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function eraseCookie(name) {\r\n    document.cookie = name+'=; Max-Age=-99999999;';\r\n}\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport Portfolio from './Portfolio';\r\nimport AddPortfolioForm from './AddPortfolioForm';\r\nimport {setCookie, getCookie} from './utils';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            portfolios: props.data\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        setCookie(\"portfolios\", JSON.stringify(this.state.portfolios));\r\n    };\r\n\r\n    removePortfolio = name => {\r\n        this.setState({\r\n            portfolios: this.state.portfolios.filter((portfolio) => {\r\n                return portfolio.name !== name;\r\n            })\r\n        });\r\n    };\r\n\r\n    handleSubmit = portfolio => {\r\n        if (this.state.portfolios.length < 10) {\r\n            let exists = false;\r\n            this.state.portfolios.forEach(function (portf) {\r\n                if (portf.name === portfolio.name) {\r\n                    exists = true;\r\n                }\r\n            });\r\n            if (!exists) {\r\n                const newPortfolios = [...this.state.portfolios, portfolio];\r\n                this.setState({\r\n                    portfolios: newPortfolios\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    updateStockCookie = (name, newStockData) => {\r\n        let ports = this.state.portfolios;\r\n        for (let i = 0; i < ports.length; i++) {\r\n            if (ports[i].name === name) {\r\n                ports[i].data = newStockData;\r\n            }\r\n        }\r\n        setCookie(\"portfolios\", JSON.stringify(ports));\r\n    };\r\n\r\n    render() {\r\n        const objects = this.state.portfolios.map((portfolio) => {\r\n            return (\r\n                <Portfolio\r\n                    name={portfolio.name}\r\n                    data={portfolio.data}\r\n                    key={portfolio.name}\r\n                    removePortfolio={this.removePortfolio}\r\n                    updateStockCookie={this.updateStockCookie}\r\n                />\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"global\">\r\n                <AddPortfolioForm handleSubmit={this.handleSubmit} />\r\n                <div className=\"portfolios-container\">\r\n                    {objects}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet cookie = getCookie(\"portfolios\");\r\nif (cookie == null) {\r\n    cookie = [];\r\n} else {\r\n    cookie = JSON.parse(cookie);\r\n}\r\n\r\nReactDOM.render(<App data={cookie}/>, document.getElementById(\"root\"));"],"sourceRoot":""}